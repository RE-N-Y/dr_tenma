type Patient
  @model
  @auth(
    rules: [
      { allow: owner }
      {
        allow: groups
        groups: ["admin", "manager"]
        operations: [create, update, delete, read]
      }
    ]
  ) {
  id: ID!
  name: String
  email: AWSEmail!
  records: [Symptom] @connection(keyName: "byPatient", fields: ["id"])
}

type Symptom
  @model
  @auth(
    rules: [
      { allow: owner }
      {
        allow: groups
        groups: ["admin", "manager"]
        operations: [create, update, delete, read]
      }
    ]
  )
  @searchable
  @key(name: "bySeverity", fields: ["severity"])
  @key(name: "byTime", fields: ["createdAt"])
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  patientID: ID!
  fever: Int!
  coughing: Int!
  breathing: Int!
  soreThroat: Int!
  allergies: Int!
  bodyAches: Int!
  temperature: Float!
  severity: Severity!
  location: Location
  note: String
  createdAt: AWSDateTime!
}

type Query {
  nearbySymptoms(
    location: LocationInput!
    m: Int
    limit: Int
    nextToken: String
  ): ModelSymptomConnection
}

input LocationInput {
  lat: Float!
  lon: Float!
}

type ModelSymptomConnection {
  items: [Symptom]
  total: Int
  nextToken: String
}

enum Severity {
  SAFE
  WATCH
  ALERT
  WARNING
}

type Location {
  lat: Float!
  lon: Float!
}
